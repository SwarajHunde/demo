#include <iostream>
#include <GL/glut.h>
#include <cmath>

using namespace std;

void init()
{
    glClearColor(1, 1, 1, 1); 
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-1, 1, -1, 1); 
}

void koch(float x1, float y1, float x2, float y2, int dp)
{
    if (dp == 0)
    {
        glBegin(GL_LINES);
        glVertex2f(x1, y1);
        glVertex2f(x2, y2);
        glEnd();
        return;
    }

    float dx = (x2 - x1) / 3.0;
    float dy = (y2 - y1) / 3.0;

    float xa = x1 + dx;
    float ya = y1 + dy;

    float xb = x1 + 2 * dx;
    float yb = y1 + 2 * dy;

    
    float xm = (xa + xb) / 2 - (sqrt(3.0) * (yb - ya)) / 2;
    float ym = (ya + yb) / 2 + (sqrt(3.0) * (xb - xa)) / 2;

    koch(x1, y1, xa, ya, dp - 1);
    koch(xa, ya, xm, ym, dp - 1);
    koch(xm, ym, xb, yb, dp - 1);
    koch(xb, yb, x2, y2, dp - 1);
}

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0, 0, 1); 
    glLineWidth(1.0);

    koch(-0.8, 0.0, 0.8, 0.0, 4); 

    glFlush();
}

int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Koch Curve");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}